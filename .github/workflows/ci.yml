---
name: Week 6 CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:

  terraform:
    name: Terraform Validate (Azure + ESXi)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Validate Terraform ESXi
        run: |
          cd terraform/esxi
          terraform init -backend=false
          terraform validate

      - name: Validate Terraform Azure
        run: |
          cd terraform/azure
          terraform init -backend=false
          terraform validate

  ansible-syntax:
    name: Ansible Syntax Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ansible + collections
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible ansible-lint yamllint python3-pip
          ansible-galaxy collection install community.docker

      - name: Run syntax check on playbook
        run: ansible-playbook -i ansible/inventories/all.ini ansible/site.yml --syntax-check

  ansible-lint:
    name: Ansible Lint + Yamllint
    runs-on: ubuntu-latest
    needs: ansible-syntax
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install linters
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible-lint yamllint

      - name: Run ansible-lint
        run: ansible-lint ansible/ || true   # laat lint-fouten zien maar stopt niet

      - name: Run yamllint
        run: yamllint ansible/ terraform/

  ansible-checkmode:
    name: Ansible Dry-Run (Azure only)
    runs-on: ubuntu-latest
    needs: ansible-lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ansible + collections
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible python3-pip
          ansible-galaxy collection install community.docker

      - name: Accept SSH host keys (Azure only)
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          for host in $(awk '{print $1}' ansible/inventories/azure.ini | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}'); do
            ssh-keyscan -H $host >> ~/.ssh/known_hosts 2>/dev/null
          done

      - name: Run playbook in check-mode (Azure only)
        run: ansible-playbook -i ansible/inventories/azure.ini ansible/site.yml --check
